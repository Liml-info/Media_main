openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
tags:
  - name: Authentication
    description: 用户认证相关接口

paths:
  /auth/check-email:
    get:
      tags: [Authentication]
      summary: 检查邮箱是否注册
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: 检查结果
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean

  /auth/register/code:
    post:
      tags: [Authentication]
      summary: 发送注册验证码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        '200':
          description: 验证码发送成功

  /auth/register:
    post:
      tags: [Authentication]
      summary: 注册账号
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '409':
          description: 邮箱已存在

  /auth/login/code:
    post:
      tags: [Authentication]
      summary: 发送登录验证码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        '200':
          description: 验证码发送成功

  /auth/login:
    post:
      tags: [Authentication]
      summary: 密码登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordLoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: 无效凭证

  /auth/login/verify:
    post:
      tags: [Authentication]
      summary: 验证码登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeLoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /auth/password/code:
    post:
      tags: [Authentication]
      summary: 发送密码重置验证码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        '200':
          description: 验证码发送成功

  /auth/password/verify:
    post:
      tags: [Authentication]
      summary: 验证重置验证码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
      responses:
        '200':
          description: 验证成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  reset_token:
                    type: string

  /auth/password/reset:
    post:
      tags: [Authentication]
      summary: 重置密码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: 密码重置成功

components:
  schemas:
    EmailRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email

    RegisterRequest:
      type: object
      required: [email, code, password]
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          minLength: 6
          maxLength: 6
        password:
          type: string
          format: password
          minLength: 8

    PasswordLoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    CodeLoginRequest:
      type: object
      required: [email, code]
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          minLength: 6
          maxLength: 6

    VerifyCodeRequest:
      type: object
      required: [email, code]
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          minLength: 6
          maxLength: 6

    ResetPasswordRequest:
      type: object
      required: [reset_token, new_password]
      properties:
        reset_token:
          type: string
        new_password:
          type: string
          format: password
          minLength: 8

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer